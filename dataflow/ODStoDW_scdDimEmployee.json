{
	"name": "ODStoDW_scdDimEmployee",
	"properties": {
		"folder": {
			"name": "ODStoDW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ODS",
						"type": "DatasetReference"
					},
					"name": "PeopleToEmployee"
				},
				{
					"dataset": {
						"referenceName": "DW",
						"type": "DatasetReference"
					},
					"name": "ExistingDimensionEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ExistingDimEmp",
						"type": "DatasetReference"
					},
					"name": "sinkNew"
				}
			],
			"transformations": [
				{
					"name": "selectColumns"
				},
				{
					"name": "FilterEmployee"
				},
				{
					"name": "UpdateValidFrom",
					"description": "Creating/updating the columns ValidFrom to the current timestamp. This is for demonstration purpose so that we can see how data is loaded into the DW."
				},
				{
					"name": "lookupIDsandValidTime"
				},
				{
					"name": "selectColumns2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PersonID as integer,",
				"          FullName as string,",
				"          PreferredName as string,",
				"          SearchName as string,",
				"          IsPermittedToLogon as boolean,",
				"          LogonName as string,",
				"          IsExternalLogonProvider as boolean,",
				"          HashedPassword as binary,",
				"          IsSystemUser as boolean,",
				"          IsEmployee as boolean,",
				"          IsSalesperson as boolean,",
				"          UserPreferences as string,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailAddress as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          OtherLanguages as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PeopleToEmployee",
				"source(output(",
				"          {Employee Key} as integer,",
				"          {WWI Employee ID} as integer,",
				"          Employee as string,",
				"          {Preferred Name} as string,",
				"          {Is Salesperson} as boolean,",
				"          Photo as binary,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ExistingDimensionEmployee",
				"FilterEmployee select(mapColumn(",
				"          {WWI Employee ID} = PersonID,",
				"          Employee = FullName,",
				"          {Preferred Name} = PreferredName,",
				"          {Is Salesperson} = IsSalesperson,",
				"          Photo,",
				"          {Valid To} = ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"PeopleToEmployee filter(IsEmployee==true()) ~> FilterEmployee",
				"selectColumns derive({Valid From} = currentTimestamp()) ~> UpdateValidFrom",
				"UpdateValidFrom, ExistingDimensionEmployee lookup(UpdateValidFrom@{Valid From} != ExistingDimensionEmployee@{Valid From}",
				"     && selectColumns@{WWI Employee ID} == ExistingDimensionEmployee@{WWI Employee ID},",
				"     multiple: false,",
				"     pickup: 'last',",
				"     asc(ExistingDimensionEmployee@{Valid From}, true),",
				"     broadcast: 'right')~> lookupIDsandValidTime",
				"lookupIDsandValidTime select(mapColumn(",
				"          {WWI Employee ID} = selectColumns@{WWI Employee ID},",
				"          Employee = selectColumns@Employee,",
				"          {Preferred Name} = selectColumns@{Preferred Name},",
				"          {Is Salesperson} = selectColumns@{Is Salesperson},",
				"          Photo = selectColumns@Photo,",
				"          {Valid From} = UpdateValidFrom@{Valid From},",
				"          {Valid To} = selectColumns@{Valid To},",
				"          {Lineage Key}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> selectColumns2",
				"selectColumns2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Employee Key} as integer,",
				"          {WWI Employee ID} as integer,",
				"          Employee as string,",
				"          {Preferred Name} as string,",
				"          {Is Salesperson} as boolean,",
				"          Photo as binary,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkNew"
			]
		}
	}
}