{
	"name": "UpdateDimensionEmployeeInDW",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OLTPtoLoad",
						"type": "DatasetReference"
					},
					"name": "PeopleToEmployee"
				},
				{
					"dataset": {
						"referenceName": "ExistingDW",
						"type": "DatasetReference"
					},
					"name": "ExistingDimensionEmployee"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectColumns"
				},
				{
					"name": "FilterEmployee"
				},
				{
					"name": "UpdateValidFrom",
					"description": "Creating/updating the columns ValidFrom"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PersonID as integer,",
				"          FullName as string,",
				"          PreferredName as string,",
				"          SearchName as string,",
				"          IsPermittedToLogon as boolean,",
				"          LogonName as string,",
				"          IsExternalLogonProvider as boolean,",
				"          HashedPassword as binary,",
				"          IsSystemUser as boolean,",
				"          IsEmployee as boolean,",
				"          IsSalesperson as boolean,",
				"          UserPreferences as string,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailAddress as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          OtherLanguages as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PeopleToEmployee",
				"source(output(",
				"          {Employee Key} as integer,",
				"          {WWI Employee ID} as integer,",
				"          Employee as string,",
				"          {Preferred Name} as string,",
				"          {Is Salesperson} as boolean,",
				"          Photo as binary,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ExistingDimensionEmployee",
				"FilterEmployee select(mapColumn(",
				"          {WWI Employee ID} = PersonID,",
				"          Employee = FullName,",
				"          {Preferred Name} = PreferredName,",
				"          {Is Salesperson} = IsSalesperson,",
				"          Photo,",
				"          {Valid To} = ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"PeopleToEmployee filter(IsEmployee==true()) ~> FilterEmployee",
				"selectColumns derive({Valid From} = currentTimestamp()) ~> UpdateValidFrom",
				"UpdateValidFrom split(ERROR_FUNCTION(''),",
				"     disjoint: false) ~> split1@(ValidFromGreaterThanExisting, ValidFromNotGreaterThanExisting)"
			]
		}
	}
}