{
	"name": "ODStoDW_scdDimCustomer",
	"properties": {
		"folder": {
			"name": "ODStoDW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ODS",
						"type": "DatasetReference"
					},
					"name": "SalesCustomersA",
					"description": "Import SalesCustomers table from ODS"
				},
				{
					"dataset": {
						"referenceName": "OLTP",
						"type": "DatasetReference"
					},
					"name": "SalesCustomerCategories",
					"description": "Import SalesCustomerCategories table from OLTP"
				},
				{
					"dataset": {
						"referenceName": "OLTP",
						"type": "DatasetReference"
					},
					"name": "SalesBuyingGroups",
					"description": "Add SalesBuyingGroups table dataset"
				},
				{
					"dataset": {
						"referenceName": "ODS",
						"type": "DatasetReference"
					},
					"name": "ApplicationPeople",
					"description": "Add Application.People table dataset"
				},
				{
					"dataset": {
						"referenceName": "ODS",
						"type": "DatasetReference"
					},
					"name": "SalesCustomersB",
					"description": "Import Sales.Customers table from ODS"
				},
				{
					"dataset": {
						"referenceName": "DW",
						"type": "DatasetReference"
					},
					"name": "ExistingDimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ExistingDimCustomer",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "joinSalesCustomersA"
				},
				{
					"name": "joinSalesCustomerCategories"
				},
				{
					"name": "joinSalesBuyingGroups"
				},
				{
					"name": "joinApplicationPeople"
				},
				{
					"name": "DataPreparedToLoad"
				},
				{
					"name": "UpdateValidFrom",
					"description": "Change Valid From Time To Current TimeStamp"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          BuyingGroupID as integer,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as integer,",
				"          DeliveryMethodID as integer,",
				"          DeliveryCityID as integer,",
				"          PostalCityID as integer,",
				"          CreditLimit as decimal(18,2),",
				"          AccountOpenedDate as date,",
				"          StandardDiscountPercentage as decimal(18,3),",
				"          IsStatementSent as boolean,",
				"          IsOnCreditHold as boolean,",
				"          PaymentDays as integer,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          WebsiteURL as string,",
				"          DeliveryAddressLine1 as string,",
				"          DeliveryAddressLine2 as string,",
				"          DeliveryPostalCode as string,",
				"          DeliveryLocation as binary,",
				"          PostalAddressLine1 as string,",
				"          PostalAddressLine2 as string,",
				"          PostalPostalCode as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomersA",
				"source(output(",
				"          CustomerCategoryID as integer,",
				"          CustomerCategoryName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomerCategories",
				"source(output(",
				"          BuyingGroupID as integer,",
				"          BuyingGroupName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesBuyingGroups",
				"source(output(",
				"          PersonID as integer,",
				"          FullName as string,",
				"          PreferredName as string,",
				"          SearchName as string,",
				"          IsPermittedToLogon as boolean,",
				"          LogonName as string,",
				"          IsExternalLogonProvider as boolean,",
				"          HashedPassword as binary,",
				"          IsSystemUser as boolean,",
				"          IsEmployee as boolean,",
				"          IsSalesperson as boolean,",
				"          UserPreferences as string,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailAddress as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          OtherLanguages as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ApplicationPeople",
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          BuyingGroupID as integer,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as integer,",
				"          DeliveryMethodID as integer,",
				"          DeliveryCityID as integer,",
				"          PostalCityID as integer,",
				"          CreditLimit as decimal(18,2),",
				"          AccountOpenedDate as date,",
				"          StandardDiscountPercentage as decimal(18,3),",
				"          IsStatementSent as boolean,",
				"          IsOnCreditHold as boolean,",
				"          PaymentDays as integer,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          WebsiteURL as string,",
				"          DeliveryAddressLine1 as string,",
				"          DeliveryAddressLine2 as string,",
				"          DeliveryPostalCode as string,",
				"          DeliveryLocation as binary,",
				"          PostalAddressLine1 as string,",
				"          PostalAddressLine2 as string,",
				"          PostalPostalCode as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesCustomersB",
				"source(output(",
				"          {Customer Key} as integer,",
				"          {WWI Customer ID} as integer,",
				"          Customer as string,",
				"          {Bill To Customer} as string,",
				"          Category as string,",
				"          {Buying Group} as string,",
				"          {Primary Contact} as string,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ExistingDimCustomer",
				"SalesCustomersA, SalesCustomersB join(SalesCustomersA@BillToCustomerID == SalesCustomersB@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinSalesCustomersA",
				"joinSalesCustomersA, SalesCustomerCategories join(SalesCustomersA@CustomerCategoryID == SalesCustomerCategories@CustomerCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinSalesCustomerCategories",
				"joinSalesCustomerCategories, SalesBuyingGroups join(SalesCustomersA@BuyingGroupID == SalesBuyingGroups@BuyingGroupID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinSalesBuyingGroups",
				"joinSalesBuyingGroups, ApplicationPeople join(SalesCustomersA@PrimaryContactPersonID == PersonID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinApplicationPeople",
				"joinApplicationPeople select(mapColumn(",
				"          {WWI Customer ID} = SalesCustomersA@CustomerID,",
				"          Customer = SalesCustomersA@CustomerName,",
				"          {Bill To Customer} = SalesCustomersB@CustomerName,",
				"          Category = SalesCustomerCategories@CustomerCategoryID,",
				"          {Buying Group} = BuyingGroupName,",
				"          {Primary Contact} = FullName,",
				"          {Postal Code} = SalesCustomersA@DeliveryPostalCode,",
				"          {Valid From} = SalesCustomersA@ValidFrom,",
				"          {Valid To} = SalesCustomersA@ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DataPreparedToLoad",
				"DataPreparedToLoad derive({Valid From} = currentTimestamp()) ~> UpdateValidFrom",
				"UpdateValidFrom, ExistingDimCustomer lookup(UpdateValidFrom@{Valid From} == ExistingDimCustomer@{Valid From},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'left')~> lookup1",
				"lookup1 select(mapColumn(",
				"          {WWI Customer ID} = DataPreparedToLoad@{WWI Customer ID},",
				"          Customer = DataPreparedToLoad@Customer,",
				"          {Bill To Customer} = DataPreparedToLoad@{Bill To Customer},",
				"          Category = DataPreparedToLoad@Category,",
				"          {Buying Group} = DataPreparedToLoad@{Buying Group},",
				"          {Primary Contact} = DataPreparedToLoad@{Primary Contact},",
				"          {Postal Code} = DataPreparedToLoad@{Postal Code},",
				"          {Valid From} = UpdateValidFrom@{Valid From},",
				"          {Valid To} = DataPreparedToLoad@{Valid To}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Customer Key} as integer,",
				"          {WWI Customer ID} as integer,",
				"          Customer as string,",
				"          {Bill To Customer} as string,",
				"          Category as string,",
				"          {Buying Group} as string,",
				"          {Primary Contact} as string,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}