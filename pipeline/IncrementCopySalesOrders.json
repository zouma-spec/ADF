{
	"name": "IncrementCopySalesOrders",
	"properties": {
		"activities": [
			{
				"name": "LookupNewWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select MAX(LastEditedWhen) as NewWatermarkvalue from Sales.Orders\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "OLTP",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Orders",
							"SchemaName": "Sales"
						}
					}
				}
			},
			{
				"name": "IncrementCopySalesOrders",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupNewWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from Sales.Orders where LastEditedWhen > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and LastEditedWhen <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "OLTP",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Orders",
							"SchemaName": "Sales"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ODS",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "Sales",
							"TableName": "Orders"
						}
					}
				]
			},
			{
				"name": "StoredProceduretoWriteWatermarkActivity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IncrementCopySalesOrders",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupOldWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.watermarktable\nwhere TableName ='Sales.Orders'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "OLTP",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "watermarktable",
							"SchemaName": "dbo"
						}
					},
					"firstRowOnly": true
				}
			}
		],
		"folder": {
			"name": "OLTPtoODS_incrementalLoad"
		},
		"annotations": []
	}
}